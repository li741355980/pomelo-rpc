0 info it worked if it ends with ok
1 verbose cli [ '/usr/local/bin/node', '/usr/local/bin/npm', 'publish' ]
2 info using npm@3.10.10
3 info using node@v6.13.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/lishusheng/Desktop/pomelo_manager/pomelo-rpc',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package.tgz not in flight; packing
9 verbose correctMkdir /Users/lishusheng/.npm correctMkdir not in flight; initializing
10 info lifecycle lpomelo-rpc@1.0.8~prepublish: lpomelo-rpc@1.0.8
11 silly lifecycle lpomelo-rpc@1.0.8~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package.tgz',
12 verbose tar pack   '/Users/lishusheng/Desktop/pomelo_manager/pomelo-rpc' ]
13 verbose tarball /Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package.tgz
14 verbose folder /Users/lishusheng/Desktop/pomelo_manager/pomelo-rpc
15 verbose addLocalTarball adding from inside cache /Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package.tgz
16 verbose correctMkdir /Users/lishusheng/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd lpomelo-rpc@1.0.8
18 verbose afterAdd /Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package/package.json not in flight; writing
19 verbose correctMkdir /Users/lishusheng/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package/package.json written
21 silly publish { name: 'lpomelo-rpc',
21 silly publish   version: '1.0.8',
21 silly publish   dependencies:
21 silly publish    { 'mqtt-connection': '3.0.0',
21 silly publish      crc: '0.2.0',
21 silly publish      'pomelo-loader': '0.0.6',
21 silly publish      'stream-pkg': '0.0.5',
21 silly publish      'pomelo-logger': '0.1.7',
21 silly publish      'node-uuid': '1.4.0',
21 silly publish      async: '^1.3.0',
21 silly publish      'bearcat-buffer': '0.1.x' },
21 silly publish   devDependencies: { mocha: '>=0.0.1', should: '>=0.0.1' },
21 silly publish   contributors:
21 silly publish    [ { name: '* Yongchang Zhou', email: 'changchang005@gmail.com' },
21 silly publish      { name: '* fantasyni', email: 'fantasyni@163.com' } ],
21 silly publish   readme: '#pomelo-rpc - rpc framework for pomelo\n\npomelo-rpc is the low level RPC framework for pomelo project. It contains two parts: client and server.\n\nThe client part generates the RPC client proxy, routes the message to the appropriate remote server and manages the network communications. Support add proxies and remote server information dynamically.\n\nThe server part exports the remote services, dispatches the remote requests to the services and also manages the network communications.\n\nAnd the remote service codes would loaded by pomelo-loader module and more details please access this [link](https://github.com/node-pomelo/pomelo-loader).\n\n+ Tags: node.js\n\n##Installation\n```\nnpm install pomelo-rpc\n```\n\n##Usage\n###Server\n``` javascript\nvar Server = require(\'pomelo-rpc\').server;\n\n// remote service path info list\nvar paths = [\n  {namespace: \'user\', path: __dirname + \'/remote/test\'}\n];\n\nvar port = 3333;\n\nvar server = Server.create({paths: paths, port: port});\nserver.start();\nconsole.log(\'rpc server started.\');\n```\n\n###Client\n``` javascript\nvar Client = require(\'pomelo-rpc\').client;\n\n// remote service interface path info list\nvar records = [\n  {namespace: \'user\', serverType: \'test\', path: __dirname + \'/remote/test\'}\n];\n\n// server info list\nvar servers = [\n  {id: \'test-server-1\', serverType: \'test\', host: \'127.0.0.1\', port: 3333}\n];\n\n// route parameter passed to route function\nvar routeParam = null;\n\n// route context passed to route function\nvar routeContext = servers;\n\n// route function to caculate the remote server id\nvar routeFunc = function(routeParam, msg, routeContext, cb) {\n  cb(null, routeContext[0].id);\n};\n\nvar client = Client.create({routeContext: routeContext, router: routeFunc});\n\nclient.start(function(err) {\n  console.log(\'rpc client start ok.\');\n\n  client.addProxies(records);\n  client.addServers(servers);\n\n  client.proxies.user.test.service.echo(routeParam, \'hello\', function(err, resp) {\n    if(err) {\n      console.error(err.stack);\n    }\n    console.log(resp);\n  });\n});\n```\n\n##Server API\n###Server.create(opts)\nCreate a RPC server instance. Intitiate the instance and acceptor with the configure.\n###Parameters\n+ opts.port - rpc server listening port.\n+ opts.paths - remote service path infos, format: [{namespace: remote service namespace, path: remote service path}, ...].\n+ opts.context - remote service context.\n+ opts.acceptorFactory(opts, msgCB) - (optional) acceptor factory method. opts.port：port that acceptor would listen，opts.services：loaded remote services，format: {namespace: {name: service}}. msgCB(msg, cb): remote request arrived callback. the method should return a acceptor instance.\n\n###server.start\nStart the remote server instance.\n\n###server.stop\nStop the remote server instance and the acceptor.\n\n###Acceptor\nImplement the low level network communication with specified protocol. Customize the protocol by passing an acceptorFactory to return different acceptors.\n\n###acceptor.listen(port)\nListen the specified port.\n\n###acceptor.close\nStop the acceptor.\n\n##Client API\n###Client.create(opts)\nCreate an RPC client instance which would generate proxies for the RPC client.\n####Parameters\n+ opts.context - context for mailbox.\n+ opts.routeContext - (optional)context for route function.\n+ opts.router(routeParam, msg, routeContext, cb) - (optional) route function which decides the RPC message should be send to which remote server. routeParam: route parameter, msg: RPC descriptioin message, routeContext: opts.routeContext.\n+ opts.mailBoxFactory(serverInfo, opts) - (optional) mail box factory method.\n\n###client.addProxies(records)\nLoad new proxy codes.\n####Parameters\n+ records - new proxy code configure information list。Format: [{namespace: service_name_space, serverType: remote_server_type, path: path_to_remote_service_interfaces}];\n\n###client.addServers(servers)\nAdd new remote server informations.\n####Parameters\n+ servers - remote server information list. Format: [{id: remote_server_id, serverType: remote_server_type, host: remote_server_host, port: remote_server_port}]\n\n###client.start(cb)\nStart the RPC client.\n\n###client.stop\nStop the RPC client and stop all the mail box connections to remote servers.\n\n###client.rpcInvoke(serverId, msg, cb)\nInvoke an RPC request.\n####Parameters\n+ serverId - remote server id.\n+ msg - RPC description message. format: {namespace: remote service namespace, serverType: remote server type, service: remote service name, method: remote service method name, args: remote service args}.\n+ cb - remote service callback function.\n\n###MailBox\nImplement the low level network communication with remote server. A mail box instance stands for a remote server. Customize the protocol by passing a mailBoxFactory parameter to client to return different mail box instances.\n\n###mailbox.connect(cb)\nConnect to the remote server.\n\n###mailbox.close\nClose mail box instance and disconnect with the remote server.\n\n###mailbox.send(msg, opts, cb)\nSend the RPC message to the associated remote server.\n####Parameters\n+ msg - RPC description message, see also clienet.rpcInvoke.\n+ opts - reserved.\n+ cb - RPC callback function.',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '1988f1b4cb674c1feaf4eee3cf4d0cff704418f3',
21 silly publish   description: 'pomelo-rpc is the low level RPC framework for pomelo project. It contains two parts: client and server.',
21 silly publish   _id: 'lpomelo-rpc@1.0.8',
21 silly publish   scripts: {},
21 silly publish   _shasum: 'c3ef40e0883fbb6fa495e1365e840816496132a7',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name lpomelo-rpc
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'lpomelo-rpc',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'lpomelo-rpc',
26 silly mapToRegistry   name: 'lpomelo-rpc',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/lpomelo-rpc
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/lishusheng/.npm/lpomelo-rpc/1.0.8/package.tgz
30 verbose request uri https://registry.npmjs.org/lpomelo-rpc
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 17:01:42
33 verbose request using bearer token for auth
34 verbose request id 3a8f3e4b3a6ab9bb
35 http request PUT https://registry.npmjs.org/lpomelo-rpc
36 http 403 https://registry.npmjs.org/lpomelo-rpc
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '93',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Thu, 26 Apr 2018 09:01:44 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-hnd18743-HND',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1524733303.117772,VS0,VE965',
37 verbose headers   vary: 'Accept-Encoding, Accept' }
38 verbose request invalidating /Users/lishusheng/.npm/registry.npmjs.org/lpomelo-rpc on PUT
39 error publish Failed PUT 403
40 verbose stack Error: You cannot publish over the previously published versions: 1.0.8. : lpomelo-rpc
40 verbose stack     at makeError (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/usr/local/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/usr/local/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/usr/local/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid lpomelo-rpc
43 verbose cwd /Users/lishusheng/Desktop/pomelo_manager/pomelo-rpc
44 error Darwin 17.4.0
45 error argv "/usr/local/bin/node" "/usr/local/bin/npm" "publish"
46 error node v6.13.0
47 error npm  v3.10.10
48 error code E403
49 error You cannot publish over the previously published versions: 1.0.8. : lpomelo-rpc
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
